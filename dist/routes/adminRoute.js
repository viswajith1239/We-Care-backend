"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const adminRepository_1 = __importDefault(require("../repositories/admin/adminRepository"));
const adminService_1 = __importDefault(require("../service/admin/adminService"));
const adminController_1 = __importDefault(require("../controllers/admin/adminController"));
const JwtConfig_1 = require("../config/JwtConfig");
const router = (0, express_1.Router)();
const adminRepository = new adminRepository_1.default();
const adminService = new adminService_1.default(adminRepository);
const adminController = new adminController_1.default(adminService);
router.post("/loginadmin", adminController.adminLogin.bind(adminController));
router.post('/logout', adminController.logoutAdmin.bind(adminController));
router.post("/specialization", adminController.addSpecialization.bind(adminController));
router.get("/users", (0, JwtConfig_1.verifyToken)('admin'), adminController.getAllUsers.bind(adminController));
router.get("/doctors", (0, JwtConfig_1.verifyToken)('admin'), adminController.getAllDoctors.bind(adminController));
router.get('/specialization', (0, JwtConfig_1.verifyToken)('admin'), adminController.getAllSpecializations.bind(adminController));
router.patch('/user/:user_id/block-unblock', (0, JwtConfig_1.verifyToken)('admin'), adminController.blockUnblockUser.bind(adminController));
router.patch('/doctor/:doctor_id/block-unblock', (0, JwtConfig_1.verifyToken)('admin'), adminController.blockUnblockDoctor.bind(adminController));
router.put("/specialization/:id", (0, JwtConfig_1.verifyToken)('admin'), adminController.updateSpecialisation.bind(adminController));
router.delete("/specializations/:id", adminController.deleteSpecialization.bind(adminController));
router.get("/doctor/kyc", (0, JwtConfig_1.verifyToken)('admin'), adminController.getAllDoctorKycDatas.bind(adminController));
router.get('/doctors/kyc/:doctor_id', (0, JwtConfig_1.verifyToken)('admin'), adminController.doctorsKycData.bind(adminController));
router.patch('/kyc-status-update/:doctor_id', (0, JwtConfig_1.verifyToken)('admin'), adminController.changeKycStatus.bind(adminController));
router.get("/contact", (0, JwtConfig_1.verifyToken)('admin'), adminController.getAllContact.bind(adminController));
router.delete("/submissions/:id", (0, JwtConfig_1.verifyToken)('admin'), adminController.deleteSubmission.bind(adminController));
router.get('/dashboardData', (0, JwtConfig_1.verifyToken)('admin'), adminController.getDashboardData.bind(adminController));
exports.default = router;
